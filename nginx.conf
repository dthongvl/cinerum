#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
}

rtmp {
    server {
        listen 1935;

        application app {
            live on;

            # No RTMP playback
            deny play all;

            # Push this stream to the local HLS packaging application
            push rtmp://127.0.0.1:1935/hls-live;

            # HTTP callback when a stream starts publishing
            # Should return 2xx to allow, 3xx to redirect, anything else to deny.
            on_publish http://127.0.0.1:3000/on_publish;

            # Called when a stream stops publishing.  Response is ignored.
            on_publish_done http://127.0.0.1:3000/on_publish_done;
        }

        application hls-live {
            live on;

            # No RTMP playback
            # deny play all;

            # Only allow publishing from localhost
            allow publish 127.0.0.1;
            deny publish all;

            # Package this stream as HLS
            hls on;
            hls_path /var/www/live;

            # Put streams in their own subdirectory under `hls_path`
            hls_nested on;
            hls_fragment_naming system;
        }
    }
}

http {
    server {
        listen 8080;
        root /var/www;

        # Let streams be delivered via XHR.
        # You'd also want to configure a `crossdomain.xml` file
        # for Flash-based players.
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET";

        location ~ ^/live/(.+\.ts)$ {
            alias /var/www/live/$1;

            # Let the MPEG-TS video chunks be cacheable
            expires max;
        }

        location ~ ^/live/(.+\.m3u8)$ {
            alias /var/www/live/$1;

            # The M3U8 playlists should not be cacheable
            expires -1d;
        }
    }
}